console.log('main.js loaded');

var $main,
    $title,
    $mainSearch,
    $randomSearch,
    $display,
    $categoryTemplate,
    $placeTemplate,
    $displayTemplate,
    $favoritesTemplate,
    $notesTemplate,
    $noteDisplayTemplate,
    $noteEditTemplate,
    $wolframTemplate,
    $panoramioTemplate,
    $favorites,
    $favoritesList,
    $removeFromFavorite,
    renderCategory,
    renderPlace,
    renderDisplayDiv,
    renderFavorite,
    renderNotesForm,
    renderNote,
    renderEditNote,
    renderWolfram,
    renderPanoramio,
    currentDestinationId,
    searchLocation;

// a user searches for a location, either through favorites or new search.
// this retrieves te info from the google place api
requestInfoAboutPlace = function(searchLocation) {
  $.ajax({
    url:      '/destinations',
    type:     'get',
    dataType: 'json',
    data:     {location: searchLocation}
  }).success(function(data){
    applyInfoToDom(data)

  }).error(function(error){
    sweetAlert("Oops...", "Something went wrong!", "error");
    console.log("Status Code: "+error.status);
    console.log("Status Text: "+error.statusText);
  })
}

applyInfoToDom = function(data){
  var $category;
  // TODO: optimize for speed
   // window.basicInfo           = data.wolfram_data.queryresult.pod[0].subpod.plaintext;
   // window.wolframMap          = data.wolfram_data.queryresult.pod[4].subpod.img.src;
   // window.populationInfo      = data.wolfram_data.queryresult.pod[6].subpod.plaintext;
   // window.populationGrowthImg = data.wolfram_data.queryresult.pod[7].subpod.img.src;

   // TODO: optimize for speed
  // calls method to display Wolfram Info
  // addWolframInfo(basicInfo, wolframMap, populationInfo, populationGrowthImg);
  var panoramioDataPhotos = data.panoramio_pics.photos;

  // creates a for loop for the panoramio pictures to be appended to the DOM
  for (var i=0, len=panoramioDataPhotos.length; i<len; i++){
    var $photoUrl     = panoramioDataPhotos[i].photo_url,
        $ownerName    = panoramioDataPhotos[i].owner_name,
        $photoTitle   = panoramioDataPhotos[i].photo_title,
        $photoFileUrl = panoramioDataPhotos[i].photo_file_url,
        $date         = panoramioDataPhotos[i].upload_date;

    addPaniramioPhoto($photoTitle, $ownerName, $photoUrl, $photoFileUrl, $date)
  }
  // adds materialize's carousel
  $('.slider').slider({full_width: false, height: 500}).removeClass('hidden');

  var googleData = data.google_data;
  // creates categories and displays data within
  for (var category in googleData) {
    $category  = addCategory($main, category);

    var name, photos;
    for (var i=0,len=googleData[category].length;i<len;i++) {
      gid    = googleData[category][i].id
      name   = googleData[category][i].name
      photos = googleData[category][i].photos
      rating = googleData[category][i].rating

      photos = _.map(photos, function(photo) {
        return photo.photo_reference;
      });

      addPlace($category, gid, name, createPhotoUrl(photos[0]), rating);
    }
  }
  // adds functionality to the favorites button (adds location to database
  $('#add-location-button').click(addLocationToFavorites);
}



$(document).ready(function(){
  $main                = $('.main');
  $title               = $('#title');
  $mainSearch          = $('.location-search');
  $randomSearch        = $('#random-search')
  $display             = $('.display');
  $categoryTemplate    = $('#gplaces-category');
  $placeTemplate       = $('#gplaces-place');
  $displayTemplate     = $('#outline');
  $favoritesTemplate   = $('#favorites-template');
  $notesTemplate       = $('#notes-form-template');
  $noteDisplayTemplate = $('#note-display-template');
  $noteEditTemplate    = $('#edit-note-template');
  $wolframTemplate     = $('#wolfram-info-template');
  $panoramioTemplate   = $('#panoramio-template');
  $favorites           = $('.favorites');
  $favoritesList       = $('.favorites-list');
  $removeFromFavorite  = $('.remove');
  $generalInfo         = $('.general-info')
  renderTitle          = _.template($title.html());
  renderCategory       = _.template($categoryTemplate.html());
  renderPlace          = _.template($placeTemplate.html());
  renderDisplayDiv     = _.template($displayTemplate.html());
  renderFavorite       = _.template($favoritesTemplate.html());
  renderNotesForm      = _.template($notesTemplate.html());
  renderNote           = _.template($noteDisplayTemplate.html());
  renderEditNote       = _.template($noteEditTemplate.html());
  renderWolfram        = _.template($wolframTemplate.html());
  renderPanoramio      = _.template($panoramioTemplate.html());

  // materialize navigational panel slide out
  $(".button-collapse").sideNav();

  // to search for a new location, these events are triggered:
  //   the google place api gets hit and information gets appended to the page
  $mainSearch.on('submit', function(event){
    event.preventDefault();
    $('.note-part').children().remove();
    $main.children().remove();
    $generalInfo.children().remove();
    searchLocation = $('.location-input').val();
    $(renderTitle({location: searchLocation})).appendTo($generalInfo);
    // contact the database to use ruby gem to find latitude and longitude of the loacation
    requestInfoAboutPlace(searchLocation);
  })

  // a user can search for a random location if he just wants to explore the possibilities
  $randomSearch.click(function(){
    $.ajax({
      url:      '/destinations',
      type:     'get',
      dataType: 'json'
    }).success(function(data){
      searchLocation = data.searchLocation;
      $generalInfo.children().remove();
      $main.children().remove();
      $(renderTitle({location: searchLocation})).appendTo($generalInfo);
      applyInfoToDom(data);

    }).error(function(error){
      sweetAlert("Oops...", "Something went wrong!", "error");
      console.log("Status Code: "+error.status);
      console.log("Status Text: "+error.statusText);
    })
  })

  // a user can look at his saved favorites his favorites
  $favorites.click(function(){
    var $id            = $(this).parent().attr('data-destination-id');
    searchLocation = $(this).text();
    $main.children().remove();
    // retrieve notes and additional information about the saved location
    $.ajax({
      url:      '/destinations/' + $id + '/notes',
      dataType: 'json',
      type:     'get'
    }).done(function(data){
      currentDestinationId = $id;
      $('.note-part').children().remove();
      $('.images').children().remove();
      $generalInfo.children().remove();
      $(renderTitle({location: searchLocation})).appendTo($generalInfo);
      addNote(data);
      addNoteForm($id);
      requestInfoAboutPlace(searchLocation);
    });

  })

  // a user can remove locations from favorites list
  $removeFromFavorite.click(function(){
    var $id = $(this).parent().attr('data-destination-id');
    var $li = $(this).parent();

    // warning to ensure that the user meant to delete
    deleteFromFavorites($id, $li)

  })


})
